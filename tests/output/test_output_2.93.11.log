Starting time is Fri  9 Dec 2022 16:21:24 CET
Blender PIP user site: /Users/ole/.local/lib/python3.9/site-packages
Adding site to path
HG_INFO:	[0m Activating HumGen, version (4, 0, 1)
============================= test session starts ==============================
platform darwin -- Python 3.9.2, pytest-7.2.0, pluggy-1.0.0
rootdir: /Users/ole/Documents/HumGen3D
plugins: cov-4.0.0, lazy-fixture-0.6.3
collected 9 items

tests/human/test_body.py FEFFEF.E.                                       [100%]

==================================== ERRORS ====================================
___________ ERROR at setup of test_randomize_body[male_rigify_human] ___________

request = <FixtureRequest for <Function test_randomize_body[male_rigify_human]>>

    def fill(request):
        item = request._pyfuncitem
        fixturenames = getattr(item, "fixturenames", None)
        if fixturenames is None:
            fixturenames = request.fixturenames
    
        if hasattr(item, 'callspec'):
            for param, val in sorted_by_dependency(item.callspec.params, fixturenames):
                if val is not None and is_lazy_fixture(val):
>                   item.callspec.params[param] = request.getfixturevalue(val.name)

../../blender_executables/blender-2.93.11-macos-x64.app/Contents/Resources/2.93/python/lib/python3.9/site-packages/pytest_lazyfixture.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/tests/fixtures.py:52: in male_rigify_human
    human.pose.rigify.generate(bpy.context)
../../Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/common/decorators.py:57: in wrapper
    return func(*args, **kwargs)
../../Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/pose/rigify.py:38: in generate
    rigify.generate.generate_rig(context, human.objects.rig)
../../blender_executables/blender-2.93.11-macos-x64.app/Contents/Resources/2.93/scripts/addons/rigify/generate.py:554: in generate_rig
    raise e
../../blender_executables/blender-2.93.11-macos-x64.app/Contents/Resources/2.93/scripts/addons/rigify/generate.py:542: in generate_rig
    Generator(context, metarig).generate()
../../blender_executables/blender-2.93.11-macos-x64.app/Contents/Resources/2.93/scripts/addons/rigify/generate.py:371: in generate
    obj = self.__create_rig_object()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <rigify.generate.Generator object at 0x13ae2e3d0>

    def __create_rig_object(self):
        scene = self.scene
        id_store = self.id_store
        meta_data = self.metarig.data
    
        # Check if the generated rig already exists, so we can
        # regenerate in the same object.  If not, create a new
        # object to generate the rig in.
        print("Fetch rig.")
    
>       self.rig_new_name = name = meta_data.rigify_rig_basename or "rig"
E       AttributeError: 'Armature' object has no attribute 'rigify_rig_basename'

../../blender_executables/blender-2.93.11-macos-x64.app/Contents/Resources/2.93/scripts/addons/rigify/generate.py:77: AttributeError
---------------------------- Captured stdout setup -----------------------------
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
Fetch rig.
Rigify: failed to generate rig.
_____________ ERROR at setup of test_reset_body[male_rigify_human] _____________

request = <FixtureRequest for <Function test_reset_body[male_rigify_human]>>

    def fill(request):
        item = request._pyfuncitem
        fixturenames = getattr(item, "fixturenames", None)
        if fixturenames is None:
            fixturenames = request.fixturenames
    
        if hasattr(item, 'callspec'):
            for param, val in sorted_by_dependency(item.callspec.params, fixturenames):
                if val is not None and is_lazy_fixture(val):
>                   item.callspec.params[param] = request.getfixturevalue(val.name)

../../blender_executables/blender-2.93.11-macos-x64.app/Contents/Resources/2.93/python/lib/python3.9/site-packages/pytest_lazyfixture.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/tests/fixtures.py:52: in male_rigify_human
    human.pose.rigify.generate(bpy.context)
../../Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/common/decorators.py:57: in wrapper
    return func(*args, **kwargs)
../../Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/pose/rigify.py:38: in generate
    rigify.generate.generate_rig(context, human.objects.rig)
../../blender_executables/blender-2.93.11-macos-x64.app/Contents/Resources/2.93/scripts/addons/rigify/generate.py:554: in generate_rig
    raise e
../../blender_executables/blender-2.93.11-macos-x64.app/Contents/Resources/2.93/scripts/addons/rigify/generate.py:542: in generate_rig
    Generator(context, metarig).generate()
../../blender_executables/blender-2.93.11-macos-x64.app/Contents/Resources/2.93/scripts/addons/rigify/generate.py:371: in generate
    obj = self.__create_rig_object()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <rigify.generate.Generator object at 0x13b0bb0d0>

    def __create_rig_object(self):
        scene = self.scene
        id_store = self.id_store
        meta_data = self.metarig.data
    
        # Check if the generated rig already exists, so we can
        # regenerate in the same object.  If not, create a new
        # object to generate the rig in.
        print("Fetch rig.")
    
>       self.rig_new_name = name = meta_data.rigify_rig_basename or "rig"
E       AttributeError: 'Armature' object has no attribute 'rigify_rig_basename'

../../blender_executables/blender-2.93.11-macos-x64.app/Contents/Resources/2.93/scripts/addons/rigify/generate.py:77: AttributeError
---------------------------- Captured stdout setup -----------------------------
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
Fetch rig.
Rigify: failed to generate rig.
_____________ ERROR at setup of test_body_keys[male_rigify_human] ______________

request = <FixtureRequest for <Function test_body_keys[male_rigify_human]>>

    def fill(request):
        item = request._pyfuncitem
        fixturenames = getattr(item, "fixturenames", None)
        if fixturenames is None:
            fixturenames = request.fixturenames
    
        if hasattr(item, 'callspec'):
            for param, val in sorted_by_dependency(item.callspec.params, fixturenames):
                if val is not None and is_lazy_fixture(val):
>                   item.callspec.params[param] = request.getfixturevalue(val.name)

../../blender_executables/blender-2.93.11-macos-x64.app/Contents/Resources/2.93/python/lib/python3.9/site-packages/pytest_lazyfixture.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/tests/fixtures.py:52: in male_rigify_human
    human.pose.rigify.generate(bpy.context)
../../Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/common/decorators.py:57: in wrapper
    return func(*args, **kwargs)
../../Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/pose/rigify.py:38: in generate
    rigify.generate.generate_rig(context, human.objects.rig)
../../blender_executables/blender-2.93.11-macos-x64.app/Contents/Resources/2.93/scripts/addons/rigify/generate.py:554: in generate_rig
    raise e
../../blender_executables/blender-2.93.11-macos-x64.app/Contents/Resources/2.93/scripts/addons/rigify/generate.py:542: in generate_rig
    Generator(context, metarig).generate()
../../blender_executables/blender-2.93.11-macos-x64.app/Contents/Resources/2.93/scripts/addons/rigify/generate.py:371: in generate
    obj = self.__create_rig_object()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <rigify.generate.Generator object at 0x13b075340>

    def __create_rig_object(self):
        scene = self.scene
        id_store = self.id_store
        meta_data = self.metarig.data
    
        # Check if the generated rig already exists, so we can
        # regenerate in the same object.  If not, create a new
        # object to generate the rig in.
        print("Fetch rig.")
    
>       self.rig_new_name = name = meta_data.rigify_rig_basename or "rig"
E       AttributeError: 'Armature' object has no attribute 'rigify_rig_basename'

../../blender_executables/blender-2.93.11-macos-x64.app/Contents/Resources/2.93/scripts/addons/rigify/generate.py:77: AttributeError
---------------------------- Captured stdout setup -----------------------------
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
Fetch rig.
Rigify: failed to generate rig.
=================================== FAILURES ===================================
_______________________ test_randomize_body[male_human] ________________________

human = Human 'Lane' [Male] instance.
context = <bpy_struct, Context at 0x7ff66321e0e8>

    @pytest.mark.parametrize("human", ALL_HUMAN_FIXTURES)
    def test_randomize_body(human, context):
        hash_before = hash(human.body)
>       human.body.randomize()

tests/human/test_body.py:16: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/common/decorators.py:45: in wrapper
    raise_if_pytest_human(args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<HumGen3D.human.body.body.BodySettings object at 0x13ad2f490>,)

    def raise_if_pytest_human(args):
        self = args[0]
        if hasattr(self, "_human"):
            human = self._human
        else:
            human = self
        if "pytest_human" in human._rig_obj:
>           raise HumGenException("No context passed for injected context.")
E           common.exceptions.HumGenException: No context passed for injected context.

../../Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/common/decorators.py:24: HumGenException
---------------------------- Captured stdout setup -----------------------------
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
______________________ test_randomize_body[female_human] _______________________

human = Human 'Cassandra' [Female] instance.
context = bpy.data.scenes['Scene']...Context

    @pytest.mark.parametrize("human", ALL_HUMAN_FIXTURES)
    def test_randomize_body(human, context):
        hash_before = hash(human.body)
>       human.body.randomize()

tests/human/test_body.py:16: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/common/decorators.py:45: in wrapper
    raise_if_pytest_human(args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<HumGen3D.human.body.body.BodySettings object at 0x13b0928e0>,)

    def raise_if_pytest_human(args):
        self = args[0]
        if hasattr(self, "_human"):
            human = self._human
        else:
            human = self
        if "pytest_human" in human._rig_obj:
>           raise HumGenException("No context passed for injected context.")
E           common.exceptions.HumGenException: No context passed for injected context.

../../Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/common/decorators.py:24: HumGenException
---------------------------- Captured stdout setup -----------------------------
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
HG_INFO:	[0m Could not find key 'LIVE_KEY_TEMP_caucasian' while setting values WARNING
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
_________________________ test_reset_body[male_human] __________________________

human = Human 'Alden' [Male] instance.
context = bpy.data.scenes['Scene']...Context

    @pytest.mark.parametrize("human", ALL_HUMAN_FIXTURES)
    def test_reset_body(human: "Human", context):
>       human.body.randomize()

tests/human/test_body.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/common/decorators.py:45: in wrapper
    raise_if_pytest_human(args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<HumGen3D.human.body.body.BodySettings object at 0x13b074790>,)

    def raise_if_pytest_human(args):
        self = args[0]
        if hasattr(self, "_human"):
            human = self._human
        else:
            human = self
        if "pytest_human" in human._rig_obj:Blender 2.93.11 (hash d52a0fa11595 built 2022-10-04 23:31:33)
Read prefs: /Users/ole/Library/Application Support/Blender/2.93/config/userpref.blend

>           raise HumGenException("No context passed for injected context.")
E           common.exceptions.HumGenException: No context passed for injected context.

../../Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/common/decorators.py:24: HumGenException
---------------------------- Captured stdout setup -----------------------------
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
________________________ test_reset_body[female_human] _________________________

human = Human 'Jo' [Female] instance.
context = bpy.data.scenes['Scene']...Context

    @pytest.mark.parametrize("human", ALL_HUMAN_FIXTURES)
    def test_reset_body(human: "Human", context):
>       human.body.randomize()

tests/human/test_body.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/common/decorators.py:45: in wrapper
    raise_if_pytest_human(args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<HumGen3D.human.body.body.BodySettings object at 0x13b0a26a0>,)

    def raise_if_pytest_human(args):
        self = args[0]
        if hasattr(self, "_human"):
            human = self._human
        else:
            human = self
        if "pytest_human" in human._rig_obj:
>           raise HumGenException("No context passed for injected context.")
E           common.exceptions.HumGenException: No context passed for injected context.

../../Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/common/decorators.py:24: HumGenException
---------------------------- Captured stdout setup -----------------------------
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
HG_INFO:	[0m Could not find key 'LIVE_KEY_TEMP_caucasian' while setting values WARNING
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
HG_INFO:	[0m <FrameSummary file /Users/ole/Library/Application Support/Blender/2.93/scripts/addons/HumGen3D/human/human.py, line 220 in from_preset>
[93mHG_WARNING:	[0m Argument 'context' for function 'set_from_dict' substituted with bpy.context.  It's highly recommended to pass your own context!
=========================== short test summary info ============================
FAILED tests/human/test_body.py::test_randomize_body[male_human] - common.exc...
FAILED tests/human/test_body.py::test_randomize_body[female_human] - common.e...
FAILED tests/human/test_body.py::test_reset_body[male_human] - common.excepti...
FAILED tests/human/test_body.py::test_reset_body[female_human] - common.excep...
ERROR tests/human/test_body.py::test_randomize_body[male_rigify_human] - Attr...
ERROR tests/human/test_body.py::test_reset_body[male_rigify_human] - Attribut...
ERROR tests/human/test_body.py::test_body_keys[male_rigify_human] - Attribute...
==================== 4 failed, 2 passed, 3 errors in 40.77s ====================
